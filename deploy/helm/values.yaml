image:
  repository: ghcr.io/corang/cloudserver
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: ""

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

# Values for the bitnami mongodb subchart
mongodb:
  architecture: replicaset
  useStatefulSet: true
  replicaCount: 3
  auth:
    usernames: [kubby]
    passwords: [kubby]
    databases: [metadata]

# HA/Scalable architecture for cloudserver
ha:
  # Toggle between standard and HA
  enabled: false

  # Replica count for cloudserver frontend and data
  replicaCount: 3

  # mongodb connection details
  mongodb:
    # Toggle between mongodb subchart or specifying external connection details
    internal: true
    external:
      replicaSetHosts: ""
      writeConcern: "majority"
      replicaSet: "rs0"
      readPreference: "primary"
      database: "metadata2"

      # Can specify username via value or secretRef
      # if both are specified secretRef takes priority
      username: ""
      usernameFromSecret:
        usernameKey: ""
        usernameSecret: ""

      # Can specify password via value or secretRef
      # if both are specified secretRef takes priority
      password: ""
      passwordFromSecret:
        passwordKey: ""
        passwordSecret: ""

  # frontend deployment configuration
  frontend:
    # TODO: Add autoscaling
    autoscaling:
      enabled: false
      minReplicas: 3
      maxReplicas: 10
      targetCPUUtilizationPercentage: 80
      # targetMemoryUtilizationPercentage: 80`

    podAnnotations: {}
    podLabels: {}

    podSecurityContext: {}
    securityContext: {}

    service:
      type: ClusterIP
      port: 80

    resources: {}

    livenessProbe:
      httpGet:
        path: /live
        port: metrics

    readinessProbe:
      httpGet:
        path: /live
        port: metrics

    volumes: []

    volumeMounts: []

    nodeSelector: {}

    tolerations: []

    affinity: {}

  # data deployment configuration
  data:
    # TODO: Add autoscaling
    autoscaling:
      enabled: false
      minReplicas: 3
      maxReplicas: 10
      targetCPUUtilizationPercentage: 80
      # targetMemoryUtilizationPercentage: 80`

    podAnnotations: {}
    podLabels: {}

    podSecurityContext: {}
    securityContext: {}

    storage:
      storageClass: ""
      accessModes:
        - ReadWriteOnce
      size: 5Gi

    service:
      type: ClusterIP
      port: 9991

    resources: {}

    livenessProbe:
      tcpSocket:
        port: data

    readinessProbe:
      tcpSocket:
        port: data

    volumes: []

    volumeMounts: []

    nodeSelector: {}

    tolerations: []

    affinity: {}

# List of buckets to create on startup
buckets: ["test"]

# List of extra regions to allow access to
extraRegions: []

# Specify your accessKey and secretKey
# Leave blank to allow helm to generate secure values for you
# Minimum of 16 characters
accessKey: ""
secretKey: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Automatically mount a ServiceAccount's API credentials?
  automount: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

#########################################################################################################
# Every value beyond this point is only for the standard deployment, they do not apply if HA is enabled #
#########################################################################################################

podAnnotations: {}
podLabels: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

service:
  type: ClusterIP
  port: 80

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

livenessProbe:
  httpGet:
    path: /live
    port: metrics
readinessProbe:
  httpGet:
    path: /live
    port: metrics

# Additional volumes on the output Deployment definition.
volumes: []
# - name: foo
#   secret:
#     secretName: mysecret
#     optional: false

# Additional volumeMounts on the output Deployment definition.
volumeMounts: []
# - name: foo
#   mountPath: "/etc/foo"
#   readOnly: true

nodeSelector: {}

tolerations: []

affinity: {}
